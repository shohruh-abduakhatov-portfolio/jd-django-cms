import os  # isort:skip

from django.conf import global_settings


gettext = lambda s: s
DATA_DIR = os.path.dirname(os.path.dirname(__file__))
"""
Django settings for cms_panel project.

Generated by 'django-admin startproject' using Django 1.11.20.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&5l2dp-85awhqr%7g=&ifit9xzc1*2od1+d8edf)k94tn3jhf0'


# SECURITY WARNING: don't run with debug turned on in production!
# When Deploying on production, use following sources:
#     http://django-learnings.blogspot.com/2016/02/serving-static-files-when-debug-false.html
#     https://www.kancloud.cn/english/mastering-django/79693
#     https://www.pythonanywhere.com/forums/topic/1674/
# Then DEBUG=False. Template 404.html should be replaced with template
DEBUG = True


ALLOWED_HOSTS = ["*"]
# "142.93.131.86",
# "127.0.0.1",
# "192.168.1.11",
# Application definition


ROOT_URLCONF = 'cms_panel.urls'

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'Asia/Tashkent'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(DATA_DIR, 'media')
STATIC_ROOT = os.path.join(DATA_DIR, 'static')

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'cms_panel', 'static'),
    os.path.join(BASE_DIR, 'cms_panel', 'media')
)
SITE_ID = 1

# os.path.dirname(os.path.dirname(__file__))
PACKAGE_ROOT = os.path.abspath(os.path.dirname(__file__))
LOCALE_PATHS = (
    os.path.join(PACKAGE_ROOT, 'locale'),
)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'cms_panel', 'templates'), ],
        'OPTIONS': {
            'context_processors': [
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.media',
                'django.template.context_processors.csrf',
                'django.template.context_processors.tz',
                'sekizai.context_processors.sekizai',
                'django.template.context_processors.static',
                'cms.context_processors.cms_settings'
            ],
            'loaders': [
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
                'django.template.loaders.eggs.Loader'
            ],
        },
    },
]

MIDDLEWARE = [
    'cms.middleware.utils.ApphookReloadMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'cms.middleware.user.CurrentUserMiddleware',
    'cms.middleware.page.CurrentPageMiddleware',
    'cms.middleware.toolbar.ToolbarMiddleware',
    'cms.middleware.language.LanguageCookieMiddleware'
]


INSTALLED_APPS = [
    'djangocms_admin_style',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.admin',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'django.contrib.staticfiles',
    'django.contrib.messages',
    'cms',
    'menus',
    'sekizai',
    'treebeard',
    'djangocms_text_ckeditor',
    'easy_thumbnails',
    'mptt',
    'filer',

    'djangocms_column',
    'djangocms_file',
    'djangocms_link',
    'djangocms_picture',
    'djangocms_style',
    'djangocms_snippet',
    'djangocms_googlemap',
    'djangocms_video',
    'cms_panel',
    'list_plugin',
    # 'parler',

    'djangocms_bootstrap4',
    'djangocms_bootstrap4.contrib.bootstrap4_grid',
    'djangocms_bootstrap4.contrib.bootstrap4_card',
    # 'djangocms_bootstrap4.contrib.bootstrap4_link',
    'djangocms_attributes_field',
    'cmsplugin_svg',
    'svg_image',
    'custom_link_plugin',
    'language_plugin',
    'angular_app',
    'login',
    'pdf_app',
]

# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

LANGUAGES = (
    ## Customize this
    ('en', gettext('en')),
    ('ru', gettext('ru')),
    ('uz', gettext('uz')),
)

# PARLER_DEFAULT_LANGUAGE = 'en'
# PARLER_LANGUAGES = {
#     1: (
#         {'code': 'en'},
#         {'code': 'ru'},
#         {'code': 'uz'},
#     ),
#     'default': {
#         # 'fallback: 'en',
#     }
# }

CMS_LANGUAGES = {
    ## Customize this
    1: [
        {
            'code': 'en',
            'name': gettext('English'),
            'redirect_on_fallback': True,
            'public': True,
            'hide_untranslated': False,
        }, {
            'code': 'ru',
            'name': gettext('Русский'),
            'redirect_on_fallback': True,
            'public': True,
            'hide_untranslated': False,
        }
        , {
            'code': 'uz',
            'name': gettext('O\'zbek'),
            'redirect_on_fallback': False,
            'public': True,
            'hide_untranslated': False,
        }
    ],
    'default': {
        'redirect_on_fallback': True,
        'public': True,
        'hide_untranslated': False,
    },
}

EXTRA_LANG_INFO = {
    'uz': {
        'bidi': False,  # right-to-left
        'code': 'uz',
        'name': 'Uzbek',
        'name_local': 'Uzbek',  # unicode codepoints here
    },
}

# Add custom languages not provided by Django
import django.conf.locale


LANG_INFO = dict(django.conf.locale.LANG_INFO, **EXTRA_LANG_INFO)
django.conf.locale.LANG_INFO = LANG_INFO

# Languages using BiDi (right-to-left) layout
LANGUAGES_BIDI = global_settings.LANGUAGES_BIDI + ["uz"]

# ****************************************************

CMS_TEMPLATES = (
    ## Customize this
    ('fullwidth.html', 'Fullwidth'),
)

CMS_PERMISSION = True

CMS_PLACEHOLDER_CONF = {}

DATABASES = {
    'default': {
        'CONN_MAX_AGE': 0,
        'ENGINE': 'django.db.backends.sqlite3',
        'HOST': 'localhost',
        'NAME': 'project.db',
        'PASSWORD': '',
        'PORT': '',
        'USER': ''
    }
}

MIGRATION_MODULES = {

}

THUMBNAIL_PROCESSORS = (
    'easy_thumbnails.processors.colorspace',
    'easy_thumbnails.processors.autocrop',
    'filer.thumbnail_processors.scale_and_crop_with_subject_location',
    'easy_thumbnails.processors.filters'
)

AUTHENTICATION_BACKENDS = ('auth_util.custom_auth.CustomAuth',)
# LOGOUT_REDIRECT_URL = '/auth/logout/'

# Constants
ANGULAR_API = 'http://178.218.200.63/'
CMS_URL = 'http://178.218.200.63:8001/'
DJANGO_URL = "http://178.218.200.63:8000/"
MIDDLEWARE_URL = "http://178.218.200.63:8080/api/v1/"
API_HEADERS = {
    'Content-Type': 'application/json',
    'Accept': 'application/json',
    'device-type': 'BROWSER'
}

SESSION_EXP = 900

ALLOWED_INCOMING_HOSTS = [
    ANGULAR_API,
    DJANGO_URL,
]
